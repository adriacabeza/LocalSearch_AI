########## Experiment 1 ##########

data = read.csv("data_1.csv", row.names=NULL, comment.char = '#')  # read csv file
cnfglist = c("All Operators", "Swap & Move", "Move & Delete", "Move")

par(mfrow=c(2,2))
par(las=2)
#par(oma=c(0,0,0,0))

boxplot(time.ms/1000~cnfg, data, cex=1, xaxt = "n", space=1, xlab="", ylab="Seconds", main="Computation time")
axis(1, at=seq(1, 4, by=1), labels = FALSE)
text(seq(1, 4, by=1), cex=0.9, par("usr")[3] - 8, labels = cnfglist, srt = 45, adj= 1, xpd = NA)

boxplot(distance.km~cnfg, data, cex=1, xaxt = "n", space=1, xlab="", ylab="km", main="Total distance driven")
axis(1, at=seq(1, 4, by=1), labels = FALSE)
text(seq(1, 4, by=1), cex=0.9, par("usr")[3] - 16, labels = cnfglist, srt = 45, adj= 1, xpd = NA)

boxplot(cars~cnfg, data, cex=1, xaxt = "n", space=1, xlab="", ylab="Nº Cars", main="Number of required cars")
axis(1, at=seq(1, 4, by=1), labels = FALSE)
text(seq(1, 4, by=1), cex=0.9, par("usr")[3] - 4, labels = cnfglist, srt = 45, adj= 1, xpd = NA)

dev.copy(pdf,'data_1.pdf')
dev.off()

########## Experiment 2 ##########

data = read.csv("data_2.csv", row.names=NULL)  # read csv file
par(mfrow=c(2,2))

boxplot(time/1000~initialS, data, cex=1, xlab="Initial Solution id", ylab="Seconds", main="Computation time")

boxplot(nodesExpanded~initialS, data, cex=1, xlab="Initial Solution id", ylab="Nº Nodes", main="Number of nodes expanded")

boxplot(distance~initialS, data, cex=1, xlab="Initial Solution id", ylab="km", main="Total distance driven")

boxplot(cars~initialS, data, cex=1, xlab="Initial Solution id", ylab="Nº Cars", main="Number of required cars")

dev.copy(pdf,'data_2.pdf')
dev.off()

########## Experiment 3 ##########

library(scatterplot3d) # Requires installing 'scatterplot3d' package.

data = read.csv("data_B.csv", row.names=NULL)  # read csv file

x = data$lambda
y = data$Nsteps
z1 = data$temps
z2 = data$cotxes
z3 = data$distancia

valid_x = x[as.logical(data$solucio)]
invalid_x = x[!as.logical(data$solucio)]
valid_y = y[as.logical(data$solucio)]
invalid_y = y[!as.logical(data$solucio)]

dev.new(width=4, height=4)
par(las=2)
scatterplot3d(x,y/1000,z1/1000, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, lab=c(4,5,2), xlim=c(0, 0.05), ylab="Nº Iterations (Thousands)", xlab="Lambda", zlab="Computation Time (s)", xaxt="n")
dev.copy(pdf,'data_B_1.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=2)
scatterplot3d(y/1000,x,z2, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, xlab="Nº Iterations (Thousands)", ylim=c(0, 0.05), ylab="Lambda", zlab="Number of Cars", xaxt="n")
dev.copy(pdf,'data_B_2.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=2)
scatterplot3d(y/1000,x,z3, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, lab=c(5,5,2), xlim=c(50, 250), ylim=c(0, 0.05), xlab="Nº Iterations (Thousands)", ylab="Lambda", zlab="Total Distance (km)", xaxt="n")
dev.copy(pdf,'data_B_3.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
par(mar=c(5,4,4,4))
plot(valid_x,valid_y/1000, pch=21, bg="green", type="p", ylab="Nº Iterations (Thousands)", xlab="Lambda")
points(invalid_x,invalid_y/1000, pch=21, bg="red", type="p")
dev.copy(pdf,'data_B_4.pdf', width=4,height=4)
dev.off()

########## Experiment 4 ##########

data = read.csv("data_4.csv", row.names=NULL)  # read csv file

dev.new(width=4, height=4)
par(las=1)
plot(data$n, data$time/1000/60, type="l", col="firebrick3", lwd=3, xlab="N", ylab="Time (minutes)")
dev.copy(pdf,'data_4_1.pdf', width=4,height=4)
dev.off()

########## Experiment 5 ##########

library(scatterplot3d) # Requires installing 'scatterplot3d' package.

data = read.csv("data_5.csv", row.names=NULL)  # read csv file

x = data$dist_exceed
y = data$car_exceed
z1 = data$time_ms
z2 = data$cars
z3 = data$distance

valid_x = x[as.logical(data$solucio)]
invalid_x = x[!as.logical(data$solucio)]
valid_y = y[as.logical(data$solucio)]
invalid_y = y[!as.logical(data$solucio)]

dev.new(width=4, height=4)
par(las=1)
scatterplot3d(x,y,z1/1000, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, lab=c(4,5,2), xlim=c(0, 10), ylab="Cars exceed", xlab="Distance exceed", zlab="Computation Time (s)", xaxt="n")
dev.copy(pdf,'data_5_1.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
scatterplot3d(y,x,z2, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, xlab="Cars exceed", ylim=c(0, 10), ylab="Distance exceed", zlab="Number of Cars", xaxt="n")
dev.copy(pdf,'data_5_2.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
scatterplot3d(y,x,z3, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, lab=c(5,5,2), xlim=c(50, 250), ylim=c(0, 10), xlab="Cars exceed", ylab="Distance exceed", zlab="Total Distance (km)", xaxt="n")
dev.copy(pdf,'data_5_3.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
par(mar=c(5,4,4,4))
plot(valid_x,valid_y, pch=21, bg="green", type="p", ylab="Cars exceed", xlab="Distance exceed")
points(invalid_x,invalid_y, pch=21, bg="red", type="p")
dev.copy(pdf,'data_5_4.pdf', width=4,height=4)
dev.off()

########## Experiment 6 ##########

library(scatterplot3d) # Requires installing 'scatterplot3d' package.

data = read.csv("data_6.csv", row.names=NULL)  # read csv file

x = data$dist_exceed
y = data$car_exceed
z1 = data$time_ms
z2 = data$cars
z3 = data$distance

valid_x = x[as.logical(data$solucio)]
invalid_x = x[!as.logical(data$solucio)]
valid_y = y[as.logical(data$solucio)]
invalid_y = y[!as.logical(data$solucio)]

dev.new(width=4, height=4)
par(las=1)
scatterplot3d(x,y,z1/1000, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, lab=c(4,5,2), xlim=c(0, 10), ylab="Cars exceed", xlab="Distance exceed", zlab="Computation Time (s)", xaxt="n")
dev.copy(pdf,'data_6_1.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
scatterplot3d(y,x,z2, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, xlab="Cars exceed", ylim=c(0, 10), ylab="Distance exceed", zlab="Number of Cars", xaxt="n")
dev.copy(pdf,'data_6_2.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
scatterplot3d(y,x,z3, cex.symbol=1.5, cex.lab=0.75, cex.axis=0.75, pch=" ", bg="black", highlight.3d = TRUE, type="h", lwd = 3, y.margin.add=0.5, lab=c(5,5,2), xlim=c(50, 250), ylim=c(0, 10), xlab="Cars exceed", ylab="Distance exceed", zlab="Total Distance (km)", xaxt="n")
dev.copy(pdf,'data_6_3.pdf', width=4,height=4)
dev.off()

dev.new(width=4, height=4)
par(las=1)
par(mar=c(5,4,4,4))
plot(valid_x,valid_y, pch=21, bg="green", type="p", ylab="Cars exceed", xlab="Distance exceed")
points(invalid_x,invalid_y, pch=21, bg="red", type="p")
dev.copy(pdf,'data_6_4.pdf', width=4,height=4)
dev.off()

########## Experiment 6.2 ##########

data = read.csv("data_6-2.csv", row.names=NULL)  # read csv file
par(mfrow=c(2,2))

boxplot(time/1000~initialS, data, cex=1, xlab="Initial Solution id", ylab="Seconds", main="Computation time")

boxplot(distance~initialS, data, cex=1, xlab="Initial Solution id", ylab="km", main="Total distance driven")

boxplot(cars~initialS, data, cex=1, xlab="Initial Solution id", ylab="Nº Cars", main="Number of required cars")

counts <- table(data$valid, data$initialS)*10

barplot(counts[c(2,1),], xlab="Initial Solution id", ylab="%", col=c("springgreen2","firebrick1"), oma=c(0, 0, 0, 4))
title("Valid Final Solutions", adj=0.2)
legend("topright", legend = rownames(counts), inset=c(0, -0.28), xpd=TRUE, bty = "n", pch=15, col=c("springgreen2","firebrick1"))

dev.copy(pdf,'data_6.2.pdf')
dev.off()

########## Experiment 7 ##########

data = read.csv("data_7.csv", row.names=NULL)  # read csv file
par(mfrow=c(2,2))

data$Color="black"
data$Color[data$people/2==data$drivers]="red"
data$Color[data$people/2!=data$drivers]="blue"

data$Pos=1
data$Pos[data$people/2==data$drivers]=1
data$Pos[data$people/2!=data$drivers]=3

plot(time/1000~people, data, cex=1.5, xlab="Number of People", ylab="Seconds", main="Computation time", col=data$Color, pch=20)
lines(data$people[data$people/2==data$drivers], data$time[data$people/2==data$drivers]/1000, type = "l", col="red", lwd=1.5)
lines(data$people[data$people/2!=data$drivers], data$time[data$people/2!=data$drivers]/1000, type = "l", col="blue", lwd=1.5)
text(data$people, data$time/1000, labels=data$drivers, cex= 0.7, pos=data$Pos, xpd=TRUE)


plot(distance~people, data, cex=1.5, xlab="Number of People", ylab="km", main="Total distance driven", col=data$Color, pch=20)
lines(data$people[data$people/2==data$drivers], data$distance[data$people/2==data$drivers], type = "l", col="red", lwd=1.5)
lines(data$people[data$people/2!=data$drivers], data$distance[data$people/2!=data$drivers], type = "l", col="blue", lwd=1.5)
text(data$people, data$distance, labels=data$drivers, cex= 0.7, pos=data$Pos, xpd=TRUE)

plot(cars~people, data, cex=1.5, xlab="Number of People", ylab="km", main="Number of required cars", col=data$Color, pch=20)
lines(data$people[data$people/2==data$drivers], data$cars[data$people/2==data$drivers], type = "l", col="red", lwd=1.5)
lines(data$people[data$people/2!=data$drivers], data$cars[data$people/2!=data$drivers], type = "l", col="blue", lwd=1.5)
text(data$people, data$cars, labels=data$drivers, cex= 0.7, pos=data$Pos, xpd=TRUE)

dev.copy(pdf,'data_7.pdf')
dev.off()